!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.histovis=e():t.histovis=e()}(window,(function(){return function(t){var e={};function r(i){if(e[i])return e[i].exports;var s=e[i]={i:i,l:!1,exports:{}};return t[i].call(s.exports,s,s.exports,r),s.l=!0,s.exports}return r.m=t,r.c=e,r.d=function(t,e,i){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)r.d(i,s,function(e){return t[e]}.bind(null,s));return i},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=12)}({12:function(t,e,r){t.exports=r(14)},14:function(t,e,r){"use strict";r.r(e),r.d(e,"Image",(function(){return i})),r.d(e,"Clustering",(function(){return o}));var i=class{constructor(t){this.name=t.name,this.camera=t.clone(),this.worldPos=t.position.clone(),this.frustum=new THREE.Frustum,frustum.setFromProjectionMatrix((new THREE.Matrix4).multiplyMatrices(t.projectionMatrix.clone(),t.matrixWorldInverse.clone())),this.distance={viewpoint:1/0},this.weight={viewpoint:0}}computeDistances(t,e){var r=t.position.clone();this.distance.viewpoint=this.worldPos.distanceToSquared(r)}};function s(t){this.left=t.left||null,this.right=t.right||null,this.object=t.object,this.level=t.level||0,this.weight=t.weight||0}function n(t){this.id=t||0,this.object=[]}var o=class{constructor(){this.clusters=[],this.images=0,this.number=0}merge(t,e){var r=Array.isArray(t),i=Array.isArray(e);return r&&i?[...t,...e]:r?[...t,e]:i?[t,...e]:[t,e]}distance(t,e){return Math.pow(t-e,2)}weight(t,e){return(t+e)/2}searchTree(t,e){var r=new n(t.level);if(t.level==e){var i=new n(t.level);i.object=t.object,r.object=[i]}else if(t.level<e)r.object=t.object;else{if(null!=t.left){var s=this.searchTree(t.left,e);s.id<e?r.object=r.object.concat(s):r.object=r.object.concat(s.object)}if(null!=t.right){var o=this.searchTree(t.right,e);o.id<e?r.object=r.object.concat(o):r.object=r.object.concat(o.object)}}return r}getClustersByNumber(t){if(this.images>0&&t>0){this.number=t;var e=t>this.images?0:this.images-t;return this.searchTree(this.clusters[0],e).object}return this.number=0,new Array}hcluster(t){this.clusters=[],this.images=t.length;var e=0;for(this.clusters=t.map(t=>new s({object:t,level:0,weight:t.weight.viewpoint}));this.clusters.length>1;){let t=[0,1];for(var r=this.distance(this.clusters[0].weight,this.clusters[1].weight),i=this.weight(this.clusters[0].weight,this.clusters[1].weight),n=0;n<this.clusters.length;n++)for(var o=n+1;o<this.clusters.length;o++){var c=this.distance(this.clusters[n].weight,this.clusters[o].weight),l=this.weight(this.clusters[n].weight,this.clusters[o].weight);c<r&&(r=c,i=l,t[0]=n,t[1]=o)}e+=1;var u=new s({object:this.merge(this.clusters[t[0]].object,this.clusters[t[1]].object),left:this.clusters[t[0]],right:this.clusters[t[1]],weight:i,level:e});this.clusters.splice(t[1],1),this.clusters.splice(t[0],1),this.clusters.push(u)}}}}})}));
//# sourceMappingURL=cluster.js.map